// Generated by view binder compiler. Do not edit!
package org.satochip.satodimeapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.satochip.satodimeapp.R;

public final class DialogCardInfoBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final CardView header;

  @NonNull
  public final ImageView ivCardAuth;

  @NonNull
  public final ImageView ivCardConnected;

  @NonNull
  public final ImageView ivCardOwner;

  @NonNull
  public final LinearLayout llCardAuth;

  @NonNull
  public final LinearLayout llCardConnected;

  @NonNull
  public final LinearLayout llCardOwner;

  @NonNull
  public final LinearLayout showCertificateBtn;

  @NonNull
  public final TextView valueCardAuth;

  @NonNull
  public final TextView valueCardConnected;

  @NonNull
  public final TextView valueCardOwner;

  private DialogCardInfoBinding(@NonNull RelativeLayout rootView, @NonNull CardView header,
      @NonNull ImageView ivCardAuth, @NonNull ImageView ivCardConnected,
      @NonNull ImageView ivCardOwner, @NonNull LinearLayout llCardAuth,
      @NonNull LinearLayout llCardConnected, @NonNull LinearLayout llCardOwner,
      @NonNull LinearLayout showCertificateBtn, @NonNull TextView valueCardAuth,
      @NonNull TextView valueCardConnected, @NonNull TextView valueCardOwner) {
    this.rootView = rootView;
    this.header = header;
    this.ivCardAuth = ivCardAuth;
    this.ivCardConnected = ivCardConnected;
    this.ivCardOwner = ivCardOwner;
    this.llCardAuth = llCardAuth;
    this.llCardConnected = llCardConnected;
    this.llCardOwner = llCardOwner;
    this.showCertificateBtn = showCertificateBtn;
    this.valueCardAuth = valueCardAuth;
    this.valueCardConnected = valueCardConnected;
    this.valueCardOwner = valueCardOwner;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogCardInfoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogCardInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_card_info, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogCardInfoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.header;
      CardView header = rootView.findViewById(id);
      if (header == null) {
        break missingId;
      }

      id = R.id.iv_card_auth;
      ImageView ivCardAuth = rootView.findViewById(id);
      if (ivCardAuth == null) {
        break missingId;
      }

      id = R.id.iv_card_connected;
      ImageView ivCardConnected = rootView.findViewById(id);
      if (ivCardConnected == null) {
        break missingId;
      }

      id = R.id.iv_card_owner;
      ImageView ivCardOwner = rootView.findViewById(id);
      if (ivCardOwner == null) {
        break missingId;
      }

      id = R.id.ll_card_auth;
      LinearLayout llCardAuth = rootView.findViewById(id);
      if (llCardAuth == null) {
        break missingId;
      }

      id = R.id.ll_card_connected;
      LinearLayout llCardConnected = rootView.findViewById(id);
      if (llCardConnected == null) {
        break missingId;
      }

      id = R.id.ll_card_owner;
      LinearLayout llCardOwner = rootView.findViewById(id);
      if (llCardOwner == null) {
        break missingId;
      }

      id = R.id.show_certificate_btn;
      LinearLayout showCertificateBtn = rootView.findViewById(id);
      if (showCertificateBtn == null) {
        break missingId;
      }

      id = R.id.value_card_auth;
      TextView valueCardAuth = rootView.findViewById(id);
      if (valueCardAuth == null) {
        break missingId;
      }

      id = R.id.value_card_connected;
      TextView valueCardConnected = rootView.findViewById(id);
      if (valueCardConnected == null) {
        break missingId;
      }

      id = R.id.value_card_owner;
      TextView valueCardOwner = rootView.findViewById(id);
      if (valueCardOwner == null) {
        break missingId;
      }

      return new DialogCardInfoBinding((RelativeLayout) rootView, header, ivCardAuth,
          ivCardConnected, ivCardOwner, llCardAuth, llCardConnected, llCardOwner,
          showCertificateBtn, valueCardAuth, valueCardConnected, valueCardOwner);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
