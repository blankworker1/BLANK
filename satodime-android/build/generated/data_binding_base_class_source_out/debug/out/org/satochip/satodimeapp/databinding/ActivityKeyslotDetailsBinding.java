// Generated by view binder compiler. Do not edit!
package org.satochip.satodimeapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.satochip.satodimeapp.R;

public final class ActivityKeyslotDetailsBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView backBtn;

  @NonNull
  public final TextView buttonShowhidePrivkey;

  @NonNull
  public final TextView buttonShowhidePubkey;

  @NonNull
  public final LinearLayout groupDetailsCoinInfo;

  @NonNull
  public final LinearLayout groupDetailsKeyslotInfo;

  @NonNull
  public final LinearLayout groupDetailsNftDescription;

  @NonNull
  public final LinearLayout groupDetailsNftInfo;

  @NonNull
  public final LinearLayout groupDetailsNftName;

  @NonNull
  public final LinearLayout groupDetailsPrivateEntropy;

  @NonNull
  public final LinearLayout groupDetailsPrivateInfo;

  @NonNull
  public final LinearLayout groupDetailsPrivateKey;

  @NonNull
  public final LinearLayout groupDetailsPrivateKey2;

  @NonNull
  public final LinearLayout groupDetailsPrivateShowhideInfo;

  @NonNull
  public final LinearLayout groupDetailsPrivateWif;

  @NonNull
  public final LinearLayout groupDetailsPrivateWif2;

  @NonNull
  public final LinearLayout groupDetailsPubkey;

  @NonNull
  public final LinearLayout groupDetailsPubkeyButtons;

  @NonNull
  public final LinearLayout groupDetailsPubkeyInfo;

  @NonNull
  public final LinearLayout groupDetailsTokenBalance;

  @NonNull
  public final LinearLayout groupDetailsTokenContract;

  @NonNull
  public final LinearLayout groupDetailsTokenInfo;

  @NonNull
  public final TextView headingText;

  @NonNull
  public final ImageView imbuttonAddressBrowse;

  @NonNull
  public final ImageView imbuttonAddressCopy;

  @NonNull
  public final ImageView imbuttonAddressQr;

  @NonNull
  public final ImageView imbuttonPrivkeyCopy;

  @NonNull
  public final ImageView imbuttonPrivkeyQr;

  @NonNull
  public final ImageView imbuttonPubkeyCopy;

  @NonNull
  public final ImageView imbuttonPubkeyQr;

  @NonNull
  public final ImageView imbuttonWifCopy;

  @NonNull
  public final ImageView imbuttonWifQr;

  @NonNull
  public final ImageView imviewAddressQr;

  @NonNull
  public final ImageView imviewNftImage;

  @NonNull
  public final ImageView imviewPrivkeyQr;

  @NonNull
  public final ImageView imviewPubkeyQr;

  @NonNull
  public final ImageView imviewWifQr;

  @NonNull
  public final LinearLayout nftInfoLayout;

  @NonNull
  public final TextView showMoreBtn;

  @NonNull
  public final TextView textDetailsPrivateEntropy;

  @NonNull
  public final TextView textDetailsPrivateKey;

  @NonNull
  public final TextView textDetailsPrivateWif;

  @NonNull
  public final TextView textDetailsPubkey;

  @NonNull
  public final TextView textDetailsTokenBalance;

  @NonNull
  public final TextView textDetailsTokenContract;

  @NonNull
  public final TextView textDetailsTokenInfo;

  @NonNull
  public final CardView toolbar;

  @NonNull
  public final TextView valueDetailsCoinAddress;

  @NonNull
  public final TextView valueDetailsCoinBalance;

  @NonNull
  public final TextView valueDetailsCoinBlockchain;

  @NonNull
  public final TextView valueDetailsKeyslotAssetType;

  @NonNull
  public final TextView valueDetailsKeyslotStatus;

  @NonNull
  public final TextView valueDetailsNftBalance;

  @NonNull
  public final TextView valueDetailsNftContract;

  @NonNull
  public final TextView valueDetailsNftDescription;

  @NonNull
  public final TextView valueDetailsNftName;

  @NonNull
  public final TextView valueDetailsNftTokenid;

  @NonNull
  public final TextView valueDetailsPrivateEntropy;

  @NonNull
  public final TextView valueDetailsPrivateKey;

  @NonNull
  public final TextView valueDetailsPrivateWif;

  @NonNull
  public final TextView valueDetailsPubkey;

  @NonNull
  public final TextView valueDetailsTokenBalance;

  @NonNull
  public final TextView valueDetailsTokenContract;

  private ActivityKeyslotDetailsBinding(@NonNull RelativeLayout rootView,
      @NonNull ImageView backBtn, @NonNull TextView buttonShowhidePrivkey,
      @NonNull TextView buttonShowhidePubkey, @NonNull LinearLayout groupDetailsCoinInfo,
      @NonNull LinearLayout groupDetailsKeyslotInfo,
      @NonNull LinearLayout groupDetailsNftDescription, @NonNull LinearLayout groupDetailsNftInfo,
      @NonNull LinearLayout groupDetailsNftName, @NonNull LinearLayout groupDetailsPrivateEntropy,
      @NonNull LinearLayout groupDetailsPrivateInfo, @NonNull LinearLayout groupDetailsPrivateKey,
      @NonNull LinearLayout groupDetailsPrivateKey2,
      @NonNull LinearLayout groupDetailsPrivateShowhideInfo,
      @NonNull LinearLayout groupDetailsPrivateWif, @NonNull LinearLayout groupDetailsPrivateWif2,
      @NonNull LinearLayout groupDetailsPubkey, @NonNull LinearLayout groupDetailsPubkeyButtons,
      @NonNull LinearLayout groupDetailsPubkeyInfo, @NonNull LinearLayout groupDetailsTokenBalance,
      @NonNull LinearLayout groupDetailsTokenContract, @NonNull LinearLayout groupDetailsTokenInfo,
      @NonNull TextView headingText, @NonNull ImageView imbuttonAddressBrowse,
      @NonNull ImageView imbuttonAddressCopy, @NonNull ImageView imbuttonAddressQr,
      @NonNull ImageView imbuttonPrivkeyCopy, @NonNull ImageView imbuttonPrivkeyQr,
      @NonNull ImageView imbuttonPubkeyCopy, @NonNull ImageView imbuttonPubkeyQr,
      @NonNull ImageView imbuttonWifCopy, @NonNull ImageView imbuttonWifQr,
      @NonNull ImageView imviewAddressQr, @NonNull ImageView imviewNftImage,
      @NonNull ImageView imviewPrivkeyQr, @NonNull ImageView imviewPubkeyQr,
      @NonNull ImageView imviewWifQr, @NonNull LinearLayout nftInfoLayout,
      @NonNull TextView showMoreBtn, @NonNull TextView textDetailsPrivateEntropy,
      @NonNull TextView textDetailsPrivateKey, @NonNull TextView textDetailsPrivateWif,
      @NonNull TextView textDetailsPubkey, @NonNull TextView textDetailsTokenBalance,
      @NonNull TextView textDetailsTokenContract, @NonNull TextView textDetailsTokenInfo,
      @NonNull CardView toolbar, @NonNull TextView valueDetailsCoinAddress,
      @NonNull TextView valueDetailsCoinBalance, @NonNull TextView valueDetailsCoinBlockchain,
      @NonNull TextView valueDetailsKeyslotAssetType, @NonNull TextView valueDetailsKeyslotStatus,
      @NonNull TextView valueDetailsNftBalance, @NonNull TextView valueDetailsNftContract,
      @NonNull TextView valueDetailsNftDescription, @NonNull TextView valueDetailsNftName,
      @NonNull TextView valueDetailsNftTokenid, @NonNull TextView valueDetailsPrivateEntropy,
      @NonNull TextView valueDetailsPrivateKey, @NonNull TextView valueDetailsPrivateWif,
      @NonNull TextView valueDetailsPubkey, @NonNull TextView valueDetailsTokenBalance,
      @NonNull TextView valueDetailsTokenContract) {
    this.rootView = rootView;
    this.backBtn = backBtn;
    this.buttonShowhidePrivkey = buttonShowhidePrivkey;
    this.buttonShowhidePubkey = buttonShowhidePubkey;
    this.groupDetailsCoinInfo = groupDetailsCoinInfo;
    this.groupDetailsKeyslotInfo = groupDetailsKeyslotInfo;
    this.groupDetailsNftDescription = groupDetailsNftDescription;
    this.groupDetailsNftInfo = groupDetailsNftInfo;
    this.groupDetailsNftName = groupDetailsNftName;
    this.groupDetailsPrivateEntropy = groupDetailsPrivateEntropy;
    this.groupDetailsPrivateInfo = groupDetailsPrivateInfo;
    this.groupDetailsPrivateKey = groupDetailsPrivateKey;
    this.groupDetailsPrivateKey2 = groupDetailsPrivateKey2;
    this.groupDetailsPrivateShowhideInfo = groupDetailsPrivateShowhideInfo;
    this.groupDetailsPrivateWif = groupDetailsPrivateWif;
    this.groupDetailsPrivateWif2 = groupDetailsPrivateWif2;
    this.groupDetailsPubkey = groupDetailsPubkey;
    this.groupDetailsPubkeyButtons = groupDetailsPubkeyButtons;
    this.groupDetailsPubkeyInfo = groupDetailsPubkeyInfo;
    this.groupDetailsTokenBalance = groupDetailsTokenBalance;
    this.groupDetailsTokenContract = groupDetailsTokenContract;
    this.groupDetailsTokenInfo = groupDetailsTokenInfo;
    this.headingText = headingText;
    this.imbuttonAddressBrowse = imbuttonAddressBrowse;
    this.imbuttonAddressCopy = imbuttonAddressCopy;
    this.imbuttonAddressQr = imbuttonAddressQr;
    this.imbuttonPrivkeyCopy = imbuttonPrivkeyCopy;
    this.imbuttonPrivkeyQr = imbuttonPrivkeyQr;
    this.imbuttonPubkeyCopy = imbuttonPubkeyCopy;
    this.imbuttonPubkeyQr = imbuttonPubkeyQr;
    this.imbuttonWifCopy = imbuttonWifCopy;
    this.imbuttonWifQr = imbuttonWifQr;
    this.imviewAddressQr = imviewAddressQr;
    this.imviewNftImage = imviewNftImage;
    this.imviewPrivkeyQr = imviewPrivkeyQr;
    this.imviewPubkeyQr = imviewPubkeyQr;
    this.imviewWifQr = imviewWifQr;
    this.nftInfoLayout = nftInfoLayout;
    this.showMoreBtn = showMoreBtn;
    this.textDetailsPrivateEntropy = textDetailsPrivateEntropy;
    this.textDetailsPrivateKey = textDetailsPrivateKey;
    this.textDetailsPrivateWif = textDetailsPrivateWif;
    this.textDetailsPubkey = textDetailsPubkey;
    this.textDetailsTokenBalance = textDetailsTokenBalance;
    this.textDetailsTokenContract = textDetailsTokenContract;
    this.textDetailsTokenInfo = textDetailsTokenInfo;
    this.toolbar = toolbar;
    this.valueDetailsCoinAddress = valueDetailsCoinAddress;
    this.valueDetailsCoinBalance = valueDetailsCoinBalance;
    this.valueDetailsCoinBlockchain = valueDetailsCoinBlockchain;
    this.valueDetailsKeyslotAssetType = valueDetailsKeyslotAssetType;
    this.valueDetailsKeyslotStatus = valueDetailsKeyslotStatus;
    this.valueDetailsNftBalance = valueDetailsNftBalance;
    this.valueDetailsNftContract = valueDetailsNftContract;
    this.valueDetailsNftDescription = valueDetailsNftDescription;
    this.valueDetailsNftName = valueDetailsNftName;
    this.valueDetailsNftTokenid = valueDetailsNftTokenid;
    this.valueDetailsPrivateEntropy = valueDetailsPrivateEntropy;
    this.valueDetailsPrivateKey = valueDetailsPrivateKey;
    this.valueDetailsPrivateWif = valueDetailsPrivateWif;
    this.valueDetailsPubkey = valueDetailsPubkey;
    this.valueDetailsTokenBalance = valueDetailsTokenBalance;
    this.valueDetailsTokenContract = valueDetailsTokenContract;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityKeyslotDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityKeyslotDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_keyslot_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityKeyslotDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.back_btn;
      ImageView backBtn = rootView.findViewById(id);
      if (backBtn == null) {
        break missingId;
      }

      id = R.id.button_showhide_privkey;
      TextView buttonShowhidePrivkey = rootView.findViewById(id);
      if (buttonShowhidePrivkey == null) {
        break missingId;
      }

      id = R.id.button_showhide_pubkey;
      TextView buttonShowhidePubkey = rootView.findViewById(id);
      if (buttonShowhidePubkey == null) {
        break missingId;
      }

      id = R.id.group_details_coin_info;
      LinearLayout groupDetailsCoinInfo = rootView.findViewById(id);
      if (groupDetailsCoinInfo == null) {
        break missingId;
      }

      id = R.id.group_details_keyslot_info;
      LinearLayout groupDetailsKeyslotInfo = rootView.findViewById(id);
      if (groupDetailsKeyslotInfo == null) {
        break missingId;
      }

      id = R.id.group_details_nft_description;
      LinearLayout groupDetailsNftDescription = rootView.findViewById(id);
      if (groupDetailsNftDescription == null) {
        break missingId;
      }

      id = R.id.group_details_nft_info;
      LinearLayout groupDetailsNftInfo = rootView.findViewById(id);
      if (groupDetailsNftInfo == null) {
        break missingId;
      }

      id = R.id.group_details_nft_name;
      LinearLayout groupDetailsNftName = rootView.findViewById(id);
      if (groupDetailsNftName == null) {
        break missingId;
      }

      id = R.id.group_details_private_entropy;
      LinearLayout groupDetailsPrivateEntropy = rootView.findViewById(id);
      if (groupDetailsPrivateEntropy == null) {
        break missingId;
      }

      id = R.id.group_details_private_info;
      LinearLayout groupDetailsPrivateInfo = rootView.findViewById(id);
      if (groupDetailsPrivateInfo == null) {
        break missingId;
      }

      id = R.id.group_details_private_key;
      LinearLayout groupDetailsPrivateKey = rootView.findViewById(id);
      if (groupDetailsPrivateKey == null) {
        break missingId;
      }

      id = R.id.group_details_private_key2;
      LinearLayout groupDetailsPrivateKey2 = rootView.findViewById(id);
      if (groupDetailsPrivateKey2 == null) {
        break missingId;
      }

      id = R.id.group_details_private_showhide_info;
      LinearLayout groupDetailsPrivateShowhideInfo = rootView.findViewById(id);
      if (groupDetailsPrivateShowhideInfo == null) {
        break missingId;
      }

      id = R.id.group_details_private_wif;
      LinearLayout groupDetailsPrivateWif = rootView.findViewById(id);
      if (groupDetailsPrivateWif == null) {
        break missingId;
      }

      id = R.id.group_details_private_wif2;
      LinearLayout groupDetailsPrivateWif2 = rootView.findViewById(id);
      if (groupDetailsPrivateWif2 == null) {
        break missingId;
      }

      id = R.id.group_details_pubkey;
      LinearLayout groupDetailsPubkey = rootView.findViewById(id);
      if (groupDetailsPubkey == null) {
        break missingId;
      }

      id = R.id.group_details_pubkey_buttons;
      LinearLayout groupDetailsPubkeyButtons = rootView.findViewById(id);
      if (groupDetailsPubkeyButtons == null) {
        break missingId;
      }

      id = R.id.group_details_pubkey_info;
      LinearLayout groupDetailsPubkeyInfo = rootView.findViewById(id);
      if (groupDetailsPubkeyInfo == null) {
        break missingId;
      }

      id = R.id.group_details_token_balance;
      LinearLayout groupDetailsTokenBalance = rootView.findViewById(id);
      if (groupDetailsTokenBalance == null) {
        break missingId;
      }

      id = R.id.group_details_token_contract;
      LinearLayout groupDetailsTokenContract = rootView.findViewById(id);
      if (groupDetailsTokenContract == null) {
        break missingId;
      }

      id = R.id.group_details_token_info;
      LinearLayout groupDetailsTokenInfo = rootView.findViewById(id);
      if (groupDetailsTokenInfo == null) {
        break missingId;
      }

      id = R.id.heading_text;
      TextView headingText = rootView.findViewById(id);
      if (headingText == null) {
        break missingId;
      }

      id = R.id.imbutton_address_browse;
      ImageView imbuttonAddressBrowse = rootView.findViewById(id);
      if (imbuttonAddressBrowse == null) {
        break missingId;
      }

      id = R.id.imbutton_address_copy;
      ImageView imbuttonAddressCopy = rootView.findViewById(id);
      if (imbuttonAddressCopy == null) {
        break missingId;
      }

      id = R.id.imbutton_address_qr;
      ImageView imbuttonAddressQr = rootView.findViewById(id);
      if (imbuttonAddressQr == null) {
        break missingId;
      }

      id = R.id.imbutton_privkey_copy;
      ImageView imbuttonPrivkeyCopy = rootView.findViewById(id);
      if (imbuttonPrivkeyCopy == null) {
        break missingId;
      }

      id = R.id.imbutton_privkey_qr;
      ImageView imbuttonPrivkeyQr = rootView.findViewById(id);
      if (imbuttonPrivkeyQr == null) {
        break missingId;
      }

      id = R.id.imbutton_pubkey_copy;
      ImageView imbuttonPubkeyCopy = rootView.findViewById(id);
      if (imbuttonPubkeyCopy == null) {
        break missingId;
      }

      id = R.id.imbutton_pubkey_qr;
      ImageView imbuttonPubkeyQr = rootView.findViewById(id);
      if (imbuttonPubkeyQr == null) {
        break missingId;
      }

      id = R.id.imbutton_wif_copy;
      ImageView imbuttonWifCopy = rootView.findViewById(id);
      if (imbuttonWifCopy == null) {
        break missingId;
      }

      id = R.id.imbutton_wif_qr;
      ImageView imbuttonWifQr = rootView.findViewById(id);
      if (imbuttonWifQr == null) {
        break missingId;
      }

      id = R.id.imview_address_qr;
      ImageView imviewAddressQr = rootView.findViewById(id);
      if (imviewAddressQr == null) {
        break missingId;
      }

      id = R.id.imview_nft_image;
      ImageView imviewNftImage = rootView.findViewById(id);
      if (imviewNftImage == null) {
        break missingId;
      }

      id = R.id.imview_privkey_qr;
      ImageView imviewPrivkeyQr = rootView.findViewById(id);
      if (imviewPrivkeyQr == null) {
        break missingId;
      }

      id = R.id.imview_pubkey_qr;
      ImageView imviewPubkeyQr = rootView.findViewById(id);
      if (imviewPubkeyQr == null) {
        break missingId;
      }

      id = R.id.imview_wif_qr;
      ImageView imviewWifQr = rootView.findViewById(id);
      if (imviewWifQr == null) {
        break missingId;
      }

      id = R.id.nft_info_layout;
      LinearLayout nftInfoLayout = rootView.findViewById(id);
      if (nftInfoLayout == null) {
        break missingId;
      }

      id = R.id.show_more_btn;
      TextView showMoreBtn = rootView.findViewById(id);
      if (showMoreBtn == null) {
        break missingId;
      }

      id = R.id.text_details_private_entropy;
      TextView textDetailsPrivateEntropy = rootView.findViewById(id);
      if (textDetailsPrivateEntropy == null) {
        break missingId;
      }

      id = R.id.text_details_private_key;
      TextView textDetailsPrivateKey = rootView.findViewById(id);
      if (textDetailsPrivateKey == null) {
        break missingId;
      }

      id = R.id.text_details_private_wif;
      TextView textDetailsPrivateWif = rootView.findViewById(id);
      if (textDetailsPrivateWif == null) {
        break missingId;
      }

      id = R.id.text_details_pubkey;
      TextView textDetailsPubkey = rootView.findViewById(id);
      if (textDetailsPubkey == null) {
        break missingId;
      }

      id = R.id.text_details_token_balance;
      TextView textDetailsTokenBalance = rootView.findViewById(id);
      if (textDetailsTokenBalance == null) {
        break missingId;
      }

      id = R.id.text_details_token_contract;
      TextView textDetailsTokenContract = rootView.findViewById(id);
      if (textDetailsTokenContract == null) {
        break missingId;
      }

      id = R.id.text_details_token_info;
      TextView textDetailsTokenInfo = rootView.findViewById(id);
      if (textDetailsTokenInfo == null) {
        break missingId;
      }

      id = R.id.toolbar;
      CardView toolbar = rootView.findViewById(id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.value_details_coin_address;
      TextView valueDetailsCoinAddress = rootView.findViewById(id);
      if (valueDetailsCoinAddress == null) {
        break missingId;
      }

      id = R.id.value_details_coin_balance;
      TextView valueDetailsCoinBalance = rootView.findViewById(id);
      if (valueDetailsCoinBalance == null) {
        break missingId;
      }

      id = R.id.value_details_coin_blockchain;
      TextView valueDetailsCoinBlockchain = rootView.findViewById(id);
      if (valueDetailsCoinBlockchain == null) {
        break missingId;
      }

      id = R.id.value_details_keyslot_asset_type;
      TextView valueDetailsKeyslotAssetType = rootView.findViewById(id);
      if (valueDetailsKeyslotAssetType == null) {
        break missingId;
      }

      id = R.id.value_details_keyslot_status;
      TextView valueDetailsKeyslotStatus = rootView.findViewById(id);
      if (valueDetailsKeyslotStatus == null) {
        break missingId;
      }

      id = R.id.value_details_nft_balance;
      TextView valueDetailsNftBalance = rootView.findViewById(id);
      if (valueDetailsNftBalance == null) {
        break missingId;
      }

      id = R.id.value_details_nft_contract;
      TextView valueDetailsNftContract = rootView.findViewById(id);
      if (valueDetailsNftContract == null) {
        break missingId;
      }

      id = R.id.value_details_nft_description;
      TextView valueDetailsNftDescription = rootView.findViewById(id);
      if (valueDetailsNftDescription == null) {
        break missingId;
      }

      id = R.id.value_details_nft_name;
      TextView valueDetailsNftName = rootView.findViewById(id);
      if (valueDetailsNftName == null) {
        break missingId;
      }

      id = R.id.value_details_nft_tokenid;
      TextView valueDetailsNftTokenid = rootView.findViewById(id);
      if (valueDetailsNftTokenid == null) {
        break missingId;
      }

      id = R.id.value_details_private_entropy;
      TextView valueDetailsPrivateEntropy = rootView.findViewById(id);
      if (valueDetailsPrivateEntropy == null) {
        break missingId;
      }

      id = R.id.value_details_private_key;
      TextView valueDetailsPrivateKey = rootView.findViewById(id);
      if (valueDetailsPrivateKey == null) {
        break missingId;
      }

      id = R.id.value_details_private_wif;
      TextView valueDetailsPrivateWif = rootView.findViewById(id);
      if (valueDetailsPrivateWif == null) {
        break missingId;
      }

      id = R.id.value_details_pubkey;
      TextView valueDetailsPubkey = rootView.findViewById(id);
      if (valueDetailsPubkey == null) {
        break missingId;
      }

      id = R.id.value_details_token_balance;
      TextView valueDetailsTokenBalance = rootView.findViewById(id);
      if (valueDetailsTokenBalance == null) {
        break missingId;
      }

      id = R.id.value_details_token_contract;
      TextView valueDetailsTokenContract = rootView.findViewById(id);
      if (valueDetailsTokenContract == null) {
        break missingId;
      }

      return new ActivityKeyslotDetailsBinding((RelativeLayout) rootView, backBtn,
          buttonShowhidePrivkey, buttonShowhidePubkey, groupDetailsCoinInfo,
          groupDetailsKeyslotInfo, groupDetailsNftDescription, groupDetailsNftInfo,
          groupDetailsNftName, groupDetailsPrivateEntropy, groupDetailsPrivateInfo,
          groupDetailsPrivateKey, groupDetailsPrivateKey2, groupDetailsPrivateShowhideInfo,
          groupDetailsPrivateWif, groupDetailsPrivateWif2, groupDetailsPubkey,
          groupDetailsPubkeyButtons, groupDetailsPubkeyInfo, groupDetailsTokenBalance,
          groupDetailsTokenContract, groupDetailsTokenInfo, headingText, imbuttonAddressBrowse,
          imbuttonAddressCopy, imbuttonAddressQr, imbuttonPrivkeyCopy, imbuttonPrivkeyQr,
          imbuttonPubkeyCopy, imbuttonPubkeyQr, imbuttonWifCopy, imbuttonWifQr, imviewAddressQr,
          imviewNftImage, imviewPrivkeyQr, imviewPubkeyQr, imviewWifQr, nftInfoLayout, showMoreBtn,
          textDetailsPrivateEntropy, textDetailsPrivateKey, textDetailsPrivateWif,
          textDetailsPubkey, textDetailsTokenBalance, textDetailsTokenContract,
          textDetailsTokenInfo, toolbar, valueDetailsCoinAddress, valueDetailsCoinBalance,
          valueDetailsCoinBlockchain, valueDetailsKeyslotAssetType, valueDetailsKeyslotStatus,
          valueDetailsNftBalance, valueDetailsNftContract, valueDetailsNftDescription,
          valueDetailsNftName, valueDetailsNftTokenid, valueDetailsPrivateEntropy,
          valueDetailsPrivateKey, valueDetailsPrivateWif, valueDetailsPubkey,
          valueDetailsTokenBalance, valueDetailsTokenContract);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
